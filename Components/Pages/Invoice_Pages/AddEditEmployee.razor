@page "/add-edit-employee/{EmployeeId:int?}"
@rendermode InteractiveServer
@using Client_Invoice_System.Models
@using Client_Invoice_System.Repositories
@using Client_Invoice_System.Repository
@inject EmployeeRepository EmployeeRepository
@inject NavigationManager Navigation

<h3 class="text-primary text-center mb-4">@(EmployeeId == null ? "Add Employee" : "Edit Employee")</h3>

<EditForm Model="EditingEmployee" OnValidSubmit="SaveEmployee">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="d-flex justify-content-center">
        <div class="card shadow p-4 w-100" style="max-width: 500px;">
            <div class="row g-3">
                <!-- Name Field -->
                <div class="col-12">
                    <label class="form-label fw-bold">Name</label>
                    <InputText class="form-control" @bind-Value="EditingEmployee.EmployeeName" required />
                </div>

                <!-- Designation Field -->
                <div class="col-12">
                    <label class="form-label">Designation</label>
                    <select class="form-control" @bind="EditingEmployee.Designation">
                        @foreach (var designation in Enum.GetValues(typeof(Designation)))
                        {
                            <option value="@designation">@designation</option>
                        }
                    </select>
                </div>

                <!-- Hourly Rate Field -->
                <div class="col-12">
                    <label class="form-label fw-bold">Hourly Rate</label>
                    <InputNumber class="form-control" @bind-Value="EditingEmployee.HourlyRate" step="0.01" required />
                </div>

                <!-- Buttons -->
                <div class="col-12 d-flex flex-column flex-md-row justify-content-md-end gap-2 mt-3">
                    <button type="submit" class="btn btn-primary w-30 w-md-auto">Save Employee</button>
                    <button type="button" class="btn btn-secondary w-30 w-md-auto" @onclick="Cancel">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter] public int? EmployeeId { get; set; }
    private Employee EditingEmployee = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (EmployeeId != null)
            {
                EditingEmployee = await EmployeeRepository.GetByIdAsync(EmployeeId.Value) ?? new Employee();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading employee: {ex.Message}");
        }
    }

    private async Task SaveEmployee()
    {
        try
        {
            if (EmployeeId == null)
            {
                await EmployeeRepository.AddAsync(EditingEmployee);
            }
            else
            {
                await EmployeeRepository.UpdateAsync(EditingEmployee);
            }

            Navigation.NavigateTo("/employees");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error saving employee: {ex.Message}");
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/employees");
    }
}
